// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopEtum.MinimalApi.Shared.Persistence;

#nullable disable

namespace ShopEtum.MinimalApi.Migrations
{
    [DbContext(typeof(ShopEtumDbContext))]
    partial class ShopEtumDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopEtum.MinimalApi.Shared.Domain.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerIdentifier = "kevin.dockx@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerIdentifier = "jerry.vanechelpoel@inetum-realdolmen.world"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerIdentifier = "dirk.slembrouck@inetum-realdolmen.world"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerIdentifier = "kevin.dockx@gmail.com"
                        });
                });

            modelBuilder.Entity("ShopEtum.MinimalApi.Shared.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CartId = 1,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            CartId = 1,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            CartId = 1,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 11,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            CartId = 2,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            CartId = 2,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 12,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 6,
                            CartId = 3,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            CartId = 3,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 13,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 8,
                            CartId = 3,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 14,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("ShopEtum.MinimalApi.Shared.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A horror novel by Stephen King",
                            Name = "The Shining",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A horror novel by Stephen King",
                            Name = "It",
                            Price = 24.99m
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A psychological horror novel by Stephen King",
                            Name = "Misery",
                            Price = 14.99m
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A horror novel by Stephen King",
                            Name = "Carrie",
                            Price = 12.99m
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A dystopian novel by George Orwell",
                            Name = "1984",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A dystopian novel by Aldous Huxley",
                            Name = "Brave New World",
                            Price = 8.99m
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A novel by Harper Lee",
                            Name = "To Kill a Mockingbird",
                            Price = 7.99m
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A novel by F. Scott Fitzgerald",
                            Name = "The Great Gatsby",
                            Price = 10.99m
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A novel by Herman Melville",
                            Name = "Moby Dick",
                            Price = 11.99m
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A novel by Leo Tolstoy",
                            Name = "War and Peace",
                            Price = 13.99m
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vinyl record by Fred Again..",
                            Name = "Fred Again.. - Actual Life 3",
                            Price = 29.99m
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vinyl record by Jamie XX",
                            Name = "Jamie XX - In Colour",
                            Price = 27.99m
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vinyl record by The Beatles",
                            Name = "Abbey Road - The Beatles",
                            Price = 25.99m
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vinyl record by Pink Floyd",
                            Name = "Dark Side of the Moon - Pink Floyd",
                            Price = 26.99m
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vinyl record by Michael Jackson",
                            Name = "Thriller - Michael Jackson",
                            Price = 24.99m
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vinyl record by AC/DC",
                            Name = "Back in Black - AC/DC",
                            Price = 23.99m
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vinyl record by Fleetwood Mac",
                            Name = "Rumours - Fleetwood Mac",
                            Price = 22.99m
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vinyl record by Eagles",
                            Name = "Hotel California - Eagles",
                            Price = 21.99m
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vinyl record by Pink Floyd",
                            Name = "The Wall - Pink Floyd",
                            Price = 20.99m
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vinyl record by Led Zeppelin",
                            Name = "Led Zeppelin IV - Led Zeppelin",
                            Price = 19.99m
                        });
                });

            modelBuilder.Entity("ShopEtum.MinimalApi.Shared.Domain.Entities.Order", b =>
                {
                    b.HasOne("ShopEtum.MinimalApi.Shared.Domain.Entities.Cart", "Cart")
                        .WithMany("Orders")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("ShopEtum.MinimalApi.Shared.Domain.Entities.Cart", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
